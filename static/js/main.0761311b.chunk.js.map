{"version":3,"sources":["components/Header.js","containers/About.js","components/Memo/MemoInsert.js","components/Memo/MemoItem.js","components/Memo/MemoList.js","containers/Memo.js","components/Todo/TodoInsert.js","components/Todo/TodoListItem.js","components/Todo/TodoList.js","components/Todo/TodoTemplate.js","containers/Todo.js","components/PageList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","activStyle","backgroundColor","color","className","exact","activeStyle","to","children","About","src","alt","text","speed","eraseSpeed","href","MemoInsert","onInsert","useState","setText","onChange","useCallback","e","target","value","onSubmit","mdTree","unified","use","markdown","remark2rehype","html","processSync","contents","preventDefault","name","placeholder","type","MemoItem","memo","dangerouslySetInnerHTML","__html","MemoList","memos","map","id","Memo","setMemos","nextId","useRef","current","concat","TodoInsert","setValue","TodoListItem","todo","onRemove","onToggle","checked","cn","onClick","TodoList","todos","TodoTemplate","Todo","setTodos","console","log","filter","onInert","location","TransitionGroup","CSSTransition","timeout","enter","exit","classNames","path","component","pathname","App","render","PageList","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0761311b.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Header.scss\";\nimport { FaApple } from \"react-icons/fa\";\n\nconst Header = () => {\n  const activStyle = {\n    backgroundColor: \"black\",\n    color: \"white\",\n  };\n\n  return (\n    <div className=\"header-box\">\n      <FaApple />\n      <ul>\n        <li>\n          <NavLink\n            className=\"nav-item\"\n            exact\n            activeStyle={activStyle}\n            to=\"/\"\n            children=\"/\"\n          >\n            About\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"nav-item\"\n            activeStyle={activStyle}\n            to=\"/memo\"\n            children=\"memo\"\n          >\n            Memo\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"nav-item\"\n            activeStyle={activStyle}\n            to=\"/todo\"\n            children=\"todo\"\n          >\n            Todo\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport {\n  FaBloggerB,\n  FaGithub,\n  FaHtml5,\n  FaCss3,\n  FaPython,\n  FaReact,\n  FaJava,\n  FaAndroid,\n} from \"react-icons/fa\";\nimport { SiNotion } from \"react-icons/si\";\nimport { DiJavascript1, DiDjango, DiMysql } from \"react-icons/di\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about-wraper\">\n      <div className=\"none-active-box\">\n        <h2>Who is White-Jang</h2>\n        <hr />\n        <div className=\"profile\">\n          <img src=\"/img/peach.png\" alt=\"profile img\" />\n          <div className=\"profile-text\">\n            <h1>장하얀 (White Clair Jang)</h1>\n            <span>2021 순천향대학교 컴퓨터공학과 졸업</span>\n            <br />\n            <span>2021 UNIT UPF 2기 멘티</span>\n            <br />\n            <span>2021 고려대학교 '고카톤' 심사위원상</span>\n            <br />\n            <span>2020 '멋쟁이사자처럼 X LOTTE 해커톤' 은상</span>\n            <br />\n          </div>\n          <ReactTypingEffect\n            className=\"typing\"\n            text={[\n              `Hello, World!`,\n              `I'm Clair...`,\n              `제 취미는 영화, 음악 감상입니다.`,\n              `사실... 게임도 좋아해요... ㅎㅎ`,\n              `이렇게 말하니까 마치 언더테일 같네요!`,\n              `이 페이지에 방문해주셔서 감사합니다.`,\n            ]}\n            speed={100}\n            eraseSpeed={100}\n          />\n          <p>\n            웹을 늘 사용하는 사람으로서 사용자 입장에서 친화적인 웹 서비스에\n            대한 고민을 항상 했습니다. 예술을 좋아하고 이야기를 전달하는 것을\n            좋아하며 다양한 사람들에 대해 생각하는 저와, '사용자에게 보여지는\n            것'과 '확실한 정보의 전달', '접근성' 같은 웹 프론트엔드와 관련된\n            속성들이 저와 꼭 맞는 분야라고 말해주는 것 같습니다.\n          </p>\n          <div className=\"links\">\n            <a href=\"https://github.com/white-jang\">\n              <FaGithub />\n              GitHub\n            </a>\n            <a href=\"https://www.notion.so/remarkablewhite/Clair-White-Jang-151ace3ed5b54446958ae2bc83092788\">\n              <SiNotion />\n              Notion\n            </a>\n            <a href=\"https://velog.io/@white-jang\">\n              <FaBloggerB />\n              Velog\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"active-box\">\n        <h2>The Skills she have.</h2>\n        <div className=\"skills-box\">\n          <div>\n            <h1>Familiar</h1>\n            <FaHtml5 />\n            <span>HTML</span>\n            <FaCss3 />\n            <span>CSS</span>\n            <DiJavascript1 />\n            <span>JavaScript</span>\n            <FaPython />\n            <span>Python</span>\n            <FaGithub />\n            <span>Git/GitHub</span>\n          </div>\n          <div>\n            <h1>Moderate</h1>\n            <FaReact />\n            <span>React</span>\n            <DiDjango />\n            <span>Django</span>\n            <FaJava />\n            <span>JAVA</span>\n          </div>\n          <div>\n            <h1>Tried</h1>\n            <span>OpenCV</span>\n            <FaAndroid />\n            <span>Android (JAVA)</span>\n            <DiMysql />\n            <span>MySQL</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useCallback } from \"react\";\nimport unified from \"unified\";\nimport markdown from \"remark-parse\";\nimport remark2rehype from \"remark-rehype\";\nimport html from \"rehype-stringify\";\nimport \"./MemoInsert.scss\";\n\nconst MemoInsert = ({ onInsert }) => {\n  const [text, setText] = useState(\"\");\n\n  const onChange = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      const mdTree = unified()\n        .use(markdown)\n        .use(remark2rehype)\n        .use(html)\n        .processSync(text).contents;\n      // 텍스트 형태의 Markdown을 구문 트리(abstract tree)로 바꾼 후 HTML 텍스트로 변환\n      // remark-rehype 패키지를 이용해서 Markdown을 HTML로 변환\n      // rehype-stringify 패키지를 이용해서 HTML을 텍스트 형태로 변환\n      onInsert(mdTree);\n      setText(\"\");\n      e.preventDefault(); // 함수 호출\n    },\n    [onInsert, text]\n  );\n\n  return (\n    <div className=\"memo-insert\">\n      <form onSubmit={onSubmit}>\n        <textarea\n          name=\"text\"\n          value={text}\n          placeholder=\"**별 두 개 안에 글씨를 넣으면 진하게 효과가 들어가요.**\"\n          onChange={onChange}\n        ></textarea>\n        <button type=\"submit\">Create Memo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default MemoInsert;\n","import React from \"react\";\nimport \"./MemoItem.scss\";\n\nconst MemoItem = ({ memo }) => {\n  const text = memo.text;\n  return (\n    <div className=\"memo\" dangerouslySetInnerHTML={{ __html: text }}></div>\n  );\n};\n\nexport default MemoItem;\n","import React from \"react\";\nimport MemoItem from \"./MemoItem\";\nimport \"./MemoList.scss\";\n\nconst MemoList = ({ memos }) => {\n  return (\n    <div className=\"memo-list\">\n      {memos.map((memo) => (\n        <MemoItem memo={memo} key={memo.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default MemoList;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport MemoInsert from \"../components/Memo/MemoInsert\";\nimport MemoList from \"../components/Memo/MemoList\";\nimport \"./Memo.scss\";\n\nconst Memo = () => {\n  const [memos, setMemos] = useState([\n    {\n      id: 1,\n      text: \"<h2>하얀의 개인 프로젝트</h2><p>아자아자! 파이팅~</p>\",\n    },\n  ]);\n\n  const nextId = useRef(2);\n\n  const onInsert = useCallback(\n    // text 값을 받고 x, y 값은 이 곳에서 랜덤 생성\n    (text) => {\n      const memo = {\n        id: nextId.current,\n        text,\n      };\n      setMemos(memos.concat(memo));\n      nextId.current += 1;\n    },\n    [memos]\n  );\n\n  return (\n    <div className=\"memo-wraper\">\n      <div className=\"memo-write-box\">\n        <h1>Memo</h1>\n        <h3>**메모를 자유롭게 남겨주세요.**</h3>\n        <span>\n          메모는 마크다운 언어를 호환합니다. 마크다운 언어로 작성해주시면\n          됩니다.\n        </span>\n        <MemoInsert onInsert={onInsert} />\n      </div>\n      <MemoList memos={memos} />\n    </div>\n  );\n};\n\nexport default Memo;\n","import React, { useState, useCallback } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport \"./TodoInsert.scss\";\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      onInsert(value);\n      setValue(\"\"); // value 값 초기화\n      // submit 이벤트는 브라우저에서 새로고침을 발생시키므로 이를 방지하기 위해\n      e.preventDefault(); // 함수 호출\n    },\n    [onInsert, value]\n  );\n\n  return (\n    <form className=\"todo-insert\" onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"할 일을 입력하세요\"\n        value={value}\n        onChange={onChange}\n      />\n      <button type=\"submit\">\n        <MdAdd />\n      </button>\n    </form>\n  );\n};\n\nexport default TodoInsert;\n","import React from \"react\";\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from \"react-icons/md\";\nimport cn from \"classnames\";\nimport \"./TodoListItem.scss\";\n\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\n  const { id, text, checked } = todo;\n  return (\n    <div className=\"todo-list-item\">\n      <div className={cn(\"checkbox\", { checked })} onClick={() => onToggle(id)}>\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n        <div className=\"text\">{text}</div>\n      </div>\n      <div className=\"remove\" onClick={() => onRemove(id)}>\n        <MdRemoveCircleOutline />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import React from \"react\";\nimport \"./TodoList.scss\";\nimport TodoListItem from \"./TodoListItem\";\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  return (\n    <div className=\"todo-list\">\n      {todos.map((todo) => (\n        <TodoListItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./TodoTemplate.scss\";\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <div className=\"todo-template\">\n      <div className=\"app-title\">Todo List</div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default TodoTemplate;\n","import React, { useState, useRef, useCallback } from \"react\";\nimport TodoInsert from \"../components/Todo/TodoInsert\";\nimport TodoList from \"../components/Todo/TodoList\";\nimport TodoTemplate from \"../components/Todo/TodoTemplate\";\nimport \"./Todo.scss\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([\n    { id: 1, text: \"리액트의 기초 알아보기\", checked: true },\n    { id: 2, text: \"컴포넌트 스타일링 해보기\", checked: true },\n    { id: 3, text: \"일정 관리 앱 만들어보기\", checked: false },\n  ]);\n\n  const nextId = useRef(4); // useRef를 사용하여 초기 id값 설정\n\n  // todo 객체 생성 후 불변성을 유지하면서 업데이트\n  // useCallback을 활용해서 렌더링 성능 최적화\n  const onInsert = useCallback(\n    (text) => {\n      console.log(text);\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos]\n  );\n\n  // 삭제 기능\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos]\n  );\n\n  // 토글 기능\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\n        )\n      );\n    },\n    [todos]\n  );\n\n  return (\n    <div className=\"todo-wraper\">\n      <TodoTemplate>\n        <TodoInsert onInert={onInsert} />\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n      </TodoTemplate>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport About from \"../containers/About\";\nimport Memo from \"../containers/Memo\";\nimport Todo from \"../containers/Todo\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({ location }) => (\n  <TransitionGroup>\n    <CSSTransition\n      key={location.pathname}\n      timeout={{ enter: 300, exit: 300 }}\n      classNames=\"frame\"\n    >\n      <Switch location={location}>\n        <Route path=\"/\" component={About} exact={true} />\n        <Route path=\"/memo\" component={Memo} />\n        <Route path=\"/todo\" component={Todo} />\n      </Switch>\n    </CSSTransition>\n  </TransitionGroup>\n);\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport \"./components/reset.css\";\nimport PageList from \"./components/PageList\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route\n        render={({ location }) =>\n          (\n            <div>\n              <Header />\n              <PageList location={location} />\n            </div>\n          ).props.children\n        }\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}